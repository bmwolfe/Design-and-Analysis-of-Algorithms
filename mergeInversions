def merge(A):
    if len(A) <= 1:
        return A, 0
    mid = len(A)//2
    A_1, inv_1 = merge(A[:mid])
    A_2, inv_2 = merge(A[mid:])
    merged, inv = mer(A_1, A_2)
    return merged, inv_1 + inv_2 + inv

def mer(A_1, A_2):
    result = []
    i = 0
    j = 0
    inv = 0
    while i < len(A_1) and j < len(A_2):
        if A_1[i] <= A_2[j]:
            result.append(A_1[i])
            i = i + 1
        else:
            result.append(A_2[j])
            j = j + 1
            inv += len(A_1) - i

    while i < len(A_1):
        result.append(A_1[i])
        i = i + 1
    while j < len(A_2):
        result.append(A_2[j])
        j = j + 1
    return result, inv

sortedArray, inversions = merge([10, 9, 15, 7, 2, 1])
print("Sorted array: ", sortedArray)
print("Number of inversions: ", inversions)
